<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jyb1AAAAAElFTkSuQmCC
</value>
  </data>
</root>